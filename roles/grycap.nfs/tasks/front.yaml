---

  - name: Ensure directories to export exist
    file: 'path="{{ item.path }}" state=directory owner=nobody group=nobody mode=0755'
    with_items: "{{ nfs_exports }}"

  - name: make sure the mount drive has a filesystem
    # force=yes
    filesystem: fstype=ext4 dev={{ item.bind }}
    with_items: "{{ nfs_exports }}"

  # - name: set mountpoints
  #   mount: name=/share src={{ mountable_share_drive | default('/dev/xvdb') }} fstype=auto opts=defaults,nobootwait dump=0 passno=2 state=mounted

  - name: Bind mount requested directories
    mount:
      path: '{{ item.path }}'
      src: '{{ item.bind }}'
      opts: 'bind'
      fstype: 'none'
      state: 'mounted'
    with_items: "{{ nfs_exports }}"
    # with_flattened:
    #   - '{{ nfs_server__combined_exports }}'
    # when: item.path|d() and item.state|d('present') != 'absent' and item.acl|d() and item.bind|d()

  - name: export the directories editing the file /etc/exports
    lineinfile: dest=/etc/exports regexp="^{{ item.path }} " line="{{ item.path }} {{ item.export }}" create=yes
    with_items: "{{ nfs_exports }}"
    register: nfs_exports_result

  - include: "front-{{ansible_os_family}}.yaml"

  - name: Ensure rpcbind is running
    service: name=rpcbind state=started enabled=yes

  - name: Restart NFS server service
    service: name={{NFS_SERVICE}} state=restarted
#    when: nfs_exports_result|changed

  - name: Check if NFS server service is started
    service: name={{NFS_SERVICE}} state=started

  # - name: mount the shared directories
  #   mount:
  #     name: "{{ item.local }}"
  #     src: "{{ item.server_host }}:{{ item.remote }}"
  #     state: mounted
  #     fstype: nfs4
  #   with_items: "{{ nfs_exports }}"

  - name: Kick exportfs if /etc/exports changed
    command: /usr/sbin/exportfs -ra
    when: nfs_exports_result.changed
    tags:
    - nfs/server
