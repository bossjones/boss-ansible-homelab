# ansible-playbook -i inventory-homelab/ bootstrap_office.yml --check
# ansible-playbook -i inventory-homelab/ bootstrap_office.yml
---
- hosts: netdata_registry
  become: yes
  become_method: sudo
  vars:
    netdata_registry_enabled: true
    netdata_registry_to_announce: "http://{{ netdata_stream_master_node }}:{{ netdata_default_port }}"
    pri_domain_name: scarlett-office.local
    netdata_stream_enabled: true
    netdata_stream_api_key: 70C1DAF7-C0F5-4D07-908F-7C5CAB0A0236
    netdata_stream_master_node: 192.168.1.191
    nginx_listen_port: 8080
  roles:
    - role: ansible-nginx
      nginx_listen_port: 8080
    - role: ansible-netdata
    - role: ansible-snmpd
  tasks:
    - name: "create /etc/nginx/sites-available/netdata"
      copy:
        content: |

          upstream backend {
              server 127.0.0.1:19999;
              keepalive 1024;
          }

          server {
              listen *:8080;
              server_name my.web.server.name;

              location / {
                  proxy_set_header X-Forwarded-Host $host;
                  proxy_set_header X-Forwarded-Server $host;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_pass http://backend;
                  proxy_http_version 1.1;
                  proxy_pass_request_headers on;
                  proxy_set_header Connection "keep-alive";
                  proxy_store off;
                  gzip on;
                  gzip_proxied any;
                  gzip_types *;

                  # Block any HTTP requests other than GET, HEAD, and OPTIONS
                  limit_except GET HEAD OPTIONS {
                      deny all;
                  }
              }

              # WordPress Pingback Request Denial
              if ($http_user_agent ~* "WordPress") {
                  return 403;
              }

          }


        dest: "/etc/nginx/sites-available/netdata"
        owner: "root"
        group: "root"
        mode: 0644

    - name: 'Create symlink for /etc/nginx/sites-enabled/netdata'
      file:
        src: "/etc/nginx/sites-available/netdata"
        dest: "/etc/nginx/sites-enabled/netdata"
        state: link

    - name: add lines to globl section of /etc/netdata/netdata.conf
      lineinfile: "dest=/etc/netdata/netdata.conf regexp='{{ item.regexp }}' line='{{ item.line }}' insertafter='[global]'"
      with_items:
        - { regexp: '\t bind socket to IP = 127.0.0.1', line: '\t bind socket to IP = 127.0.0.1' }
        - { regexp: '\t disconnect idle web clients after seconds = 3600', line: '\t disconnect idle web clients after seconds = 3600' }
        - { regexp: '\t enable web responses gzip compression = no', line: '\t enable web responses gzip compression = no' }

    - name: "file limits /etc/security/limits.d/nginx.conf"
      copy:
        content: |
          nginx   soft    nofile  10000
          nginx   hard    nofile  30000
        dest: "/etc/security/limits.d/nginx.conf"
        owner: "root"
        group: "root"
        mode: 0644

    - name: "file limits /etc/security/limits.d/netdata.conf"
      copy:
        content: |
          netdata   soft    nofile  10000
          netdata   hard    nofile  30000
        dest: "/etc/security/limits.d/netdata.conf"
        owner: "root"
        group: "root"
        mode: 0644



    - name: "Create directory: /etc/systemd/system/netdata.service.d"
      file:
        path: "/etc/systemd/system/netdata.service.d"
        state: directory
        owner: "root"
        group: "root"

    - name: "Create directory: /etc/systemd/system/nginx.service.d"
      file:
        path: "/etc/systemd/system/nginx.service.d"
        state: directory
        owner: "root"
        group: "root"


    - name: "file limits /etc/systemd/system/nginx.service.d/limits.conf"
      copy:
        content: |
          [Service]
          LimitNOFILE=30000
        dest: "/etc/systemd/system/nginx.service.d/limits.conf"
        owner: "root"
        group: "root"
        mode: 0644


    - name: "file limits /etc/systemd/system/netdata.service.d/limits.conf"
      copy:
        content: |
          [Service]
          LimitNOFILE=30000
        dest: "/etc/systemd/system/netdata.service.d/limits.conf"
        owner: "root"
        group: "root"
        mode: 0644

    - name: reload systemd configuration
      become: yes
      command: systemctl daemon-reload

    # Restart service and ensure it is enabled
    - name: start and enable nginx
      become: yes
      service: name=nginx state=restarted enabled=yes

    - name: start and enable netdata
      become: yes
      service: name=netdata state=restarted enabled=yes


# - hosts: netdata:!netdata_registry
#   vars:
#     netdata_registry_enabled: false
#     netdata_registry_to_announce: "http://{{ netdata_stream_master_node }}:{{ netdata_default_port }}"
#     pri_domain_name: test.vagrant.local
#     netdata_stream_enabled: true
#     netdata_stream_api_key: 70C1DAF7-C0F5-4D07-908F-7C5CAB0A0236
#     netdata_stream_master_node: 192.168.1.191
#   roles:
#     - role: ansible-nodejs
#     - role: ansible-fail2ban
#     - role: ansible-nginx
#     - role: ansible-netdata
